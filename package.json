{
  "name": "my-pets-api",
  "version": "0.1.21",
  "description": "GraphQL server based on NodeJs to give back-end support a web client based on React",
  "author": "Nicolás Omar González Passerino",
  "license": "MIT",
  "private": false,
  "homepage": "https://github.com/NicolasOmar/my-pets-api#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/NicolasOmar/my-pets-api.git"
  },
  "bugs": {
    "url": "https://github.com/NicolasOmar/my-pets-api/issues"
  },
  "scripts": {
    "start": "npm run env:local -- nodemon --ext js,gql --watch src --exec npm run server",
    "server": "babel-node src/index.js",
    "start:ci": "babel ./src/index.js -d ./build ./src --copy-files && node ./build/index.js",
    "test": "env-cmd -f ./env/test.env jest --runInBand",
    "test:ci": "npm test -- --coverage",
    "env:local": "env-cmd -f ./env/local.env",
    "db": "npm run env:local -- babel-node scripts/generate-db.js",
    "lint": "eslint --fix src",
    "prettier": "prettier --write src",
    "update-version": "node ./scripts/update-version.js"
  },
  "dependencies": {
    "@babel/cli": "^7.13.16",
    "@babel/core": "^7.13.16",
    "@babel/node": "^7.13.13",
    "@babel/plugin-transform-runtime": "^7.14.3",
    "@babel/preset-env": "^7.13.15",
    "apollo-server-errors": "^3.3.1",
    "apollo-server-express": "^3.6.7",
    "babel-plugin-import-graphql": "^2.8.1",
    "bcryptjs": "^2.4.3",
    "crypto-js": "^4.0.0",
    "express": "^4.17.1",
    "graphql": "^16.3.0",
    "hbs": "^4.1.1",
    "jsonwebtoken": "^8.5.1",
    "mongoose": "^6.2.9",
    "validator": "^13.5.2"
  },
  "devDependencies": {
    "@babel/eslint-parser": "^7.14.4",
    "@babel/register": "^7.15.3",
    "env-cmd": "^10.1.0",
    "eslint": "^8.12.0",
    "eslint-plugin-import": "^2.23.4",
    "eslint-plugin-node": "^11.1.0",
    "husky": "^4.3.6",
    "jest": "^27.5.1",
    "lint-staged": "^12.3.7",
    "nodemon": "^2.0.7",
    "prettier": "^2.2.1"
  },
  "engines": {
    "node": "16.13.2",
    "npm": "8.5.3"
  },
  "jest": {
    "verbose": true,
    "testEnvironment": "node",
    "globalSetup": "./scripts/init-tests.js",
    "globalTeardown": "./scripts/close-tests.js",
    "collectCoverageFrom": [
      "src/**/!(*model|*mocks).js"
    ]
  },
  "lint-staged": {
    "src/**/!(*test).js": [
      "prettier --write",
      "eslint --fix"
    ],
    "src/**/(*test).js": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged && npm run test:ci && git add .",
      "pre-push": "npm run update-version"
    }
  }
}
